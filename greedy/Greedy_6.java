/*
****문제****
[문제 출처-프로그래머스 코딩테스트 고득점 Kit - Greedy - 단속 카메라]

문제 설명
고속도로를 이동하는 모든 차량이 고속도로를 이용하면서 단속용 카메라를 한 번은 만나도록 카메라를 설치하려고 합니다.

고속도로를 이동하는 차량의 경로 routes가 매개변수로 주어질 때, 모든 차량이 한 번은 단속용 카메라를 만나도록 하려면 최소 몇 대의 카메라를 설치해야 하는지를 return 하도록 solution 함수를 완성하세요.

제한사항

차량의 대수는 1대 이상 10,000대 이하입니다.
routes에는 차량의 이동 경로가 포함되어 있으며 routes[i][0]에는 i번째 차량이 고속도로에 진입한 지점, routes[i][1]에는 i번째 차량이 고속도로에서 나간 지점이 적혀 있습니다.
차량의 진입/진출 지점에 카메라가 설치되어 있어도 카메라를 만난것으로 간주합니다.
차량의 진입 지점, 진출 지점은 -30,000 이상 30,000 이하입니다.
입출력 예

routes	                                   return
[[-20,-15], [-14,-5], [-18,-13], [-5,-3]]	2 */

import java.util.*;
class Solution {
    public int solution(int[][] routes) {
        int answer = 0;
        
        // 1. 진출 지점 기준으로 오름차순 정렬
        Arrays.sort(routes, (o1, o2) -> {
            return o1[1] - o2[1];  // o1[1] (진출 지점)과 o2[1] (진출 지점)을 비교하여 오름차순 정렬
        });

        // 2. 첫 번째 차량의 진출 지점에 카메라 설치
        int end = routes[0][1]; // 첫 번째 차량의 진출 지점으로 카메라 설치
        answer++;  // 카메라가 하나 설치되었으므로 answer를 1 증가
        
        // 3. 나머지 차량에 대해 반복
        for(int i=1; i<routes.length; i++) {
            // 4. 현재 차량의 진입 지점이 카메라의 진출 지점보다 뒤에 있다면, 이미 카메라가 커버함
            if(end < routes[i][0]) { 
                // 5. 새로운 카메라 설치
                end = routes[i][1];  // 현재 차량의 진출 지점에 카메라를 설치
                answer++;  // 카메라 설치
            }
        }
        
        // 6. 최소 카메라 수 반환
        return answer;
    }
}
